(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["tema1"],{"02c8":function(e,a,t){"use strict";t.r(a);var s=function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",{staticClass:"curso-main-container pb-3"},[t("BannerInterno"),e._m(0)],1)},i=[function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"container tarjeta tarjeta--blanca p-4 p-md-5 mb-5"},[s("div",{staticClass:"titulo-principal color-acento-contenido",attrs:{"data-aos":"flip-up"}},[s("div",{staticClass:"titulo-principal__numero"},[s("span",[e._v("1")])]),s("h1",[e._v("Conceptos GOF")])]),s("div",{staticClass:"row mb-5"},[s("div",{staticClass:"col-lg-8 order-2 order-lg-1",attrs:{"data-aos":"fade-right"}},[s("p",[e._v("Los patrones GoF se presentan como una forma indispensable de abordar la programación y surgen debido a: "),s("b",[e._v("Erich Gamma, Richard Helm, Ralph Jonson y John Vlissides")]),e._v(", quienes tratan el tema en su libro “"),s("i",[e._v("Design Patterns—Elements of Reusable Software")]),e._v("”; por esta razón, a estos patrones se les conoce con el nombre de "),s("b",[e._v("la pandilla de los cuatro")]),e._v(" ("),s("i",[e._v("GoF, gang of four")]),e._v("). Según estos autores, los patrones de diseño se basan principalmente en dos principios de diseño orientado a objetos:")]),s("div",{staticClass:"row justify-content-center mb-3"},[s("div",{staticClass:"col-lg-10 bg-c2"},[s("div",{staticClass:"p-4"},[s("div",{staticClass:"row align-items-center"},[s("div",{staticClass:"col-md-auto"},[s("figure",[s("img",{staticClass:"m-auto",staticStyle:{width:"80px"},attrs:{src:t("b135"),alt:""}})])]),s("div",{staticClass:"col"},[s("ul",{staticClass:"lista-ul mb-0"},[s("li",{staticClass:"d-flex"},[s("i",{staticClass:"fa fa-cube",staticStyle:{color:"white"}}),e._v(" "),s("p",{staticClass:"text-white mb-0"},[e._v("Programa una interfaz, no una implementación.")])]),s("li",{staticClass:"d-flex mb-0"},[s("i",{staticClass:"fa fa-cube",staticStyle:{color:"white"}}),e._v(" "),s("p",{staticClass:"text-white mb-0"},[e._v("Favorece la composición de objetos sobre la herencia.")])])])])])])])]),s("p",{staticClass:"mb-0"},[e._v("Para EcuRed (s. f.), los patrones de diseño tienen las siguientes características:")])]),s("div",{staticClass:"col-lg-4 mb-4 mb-lg-0 order-1 order-lg-2",attrs:{"data-aos":"fade-left"}},[s("figure",[s("img",{staticClass:"m-auto",staticStyle:{width:"400px"},attrs:{src:t("553c"),alt:""}})])])]),s("div",{staticClass:"row bg-c3 mb-5",attrs:{"data-aos":"fade-down"}},[s("div",{staticClass:"col-12 px-3 px-lg-5"},[s("div",{staticClass:"p-4"},[s("figure",{staticClass:"d-none d-lg-block"},[s("img",{staticClass:"m-auto",attrs:{src:t("ff66"),alt:"El diagrama describe cinco características de los patrones de diseño en informática: constituyen soluciones conceptuales para problemas reales, son especificaciones técnicas basadas en la experiencia que pueden variar, se utilizan frecuentemente aprovechando la experiencia de la industria del software, no imponen un diseño concreto de objetos sino que dan guías de estructuración, y favorecen la implementación de las principales características de la programación orientada a objetos, mejorando el manejo y la especialización."}})]),s("figure",{staticClass:"d-block d-lg-none"},[s("img",{staticClass:"m-auto",attrs:{src:t("2b93"),alt:"El diagrama describe cinco características de los patrones de diseño en informática: constituyen soluciones conceptuales para problemas reales, son especificaciones técnicas basadas en la experiencia que pueden variar, se utilizan frecuentemente aprovechando la experiencia de la industria del software, no imponen un diseño concreto de objetos sino que dan guías de estructuración, y favorecen la implementación de las principales características de la programación orientada a objetos, mejorando el manejo y la especialización."}})])])])]),s("p",{staticClass:"mb-5",attrs:{"data-aos":"fade-right"}},[e._v("Los patrones que describen GOF suelen clasificarse en tres grandes categorías según su finalidad: patrones comportamentales, patrones creacionales y patrones estructurales. Una breve explicación de estos podrá consultarse a continuación, pues en el transcurso de este componente serán explicados con mayor detalle:")]),s("figure",{staticClass:"mb-5",attrs:{"data-aos":"fade-down"}},[s("img",{staticClass:"m-auto",staticStyle:{width:"750px"},attrs:{src:t("418a"),alt:"El diagrama clasifica los patrones de diseño de software del grupo de los cuatro en tres tipos: creacionales, que abstraen la creación y configuración de objetos; estructurales, que agrupan entidades para formar estructuras más complejas; y comportamentales, que detallan las responsabilidades y comunicación entre objetos."}})]),s("p",{staticClass:"mb-5",attrs:{"data-aos":"fade-right"}},[e._v("Para conocer cada uno de estos patrones GOF, lo invitamos a revisar su definición:")]),s("div",{staticClass:"titulo-sexto color-acento-contenido"},[s("span",[s("b",[e._v("Tabla 1.")]),e._v(" Patrones GoF ")])]),s("div",{staticClass:"tabla-a color-acento-contenido",attrs:{"data-aos":"fade-left"}},[s("table",[s("thead",[s("tr",[s("th",{staticStyle:{width:"30%"}},[e._v("Nombre")]),s("th",[e._v("Definición")])])]),s("tbody",[s("tr",[s("td",[e._v("Fábrica abstracta ("),s("i",[e._v("Abstract factory")]),e._v(")")]),s("td",[e._v("Crea diferentes familias de objetos relacionados o dependientes, como, por ejemplo, la creación de diferentes elementos de una interfaz gráfica.")])]),s("tr",[s("td",[e._v("Método de fabricación ("),s("i",[e._v("Factory method")]),e._v(")")]),s("td",[e._v("Define una interfaz para crear un objeto, pero permite que las subclases determinen la clase a implementar.")])]),s("tr",[s("td",[e._v("Prototipo ("),s("i",[e._v("Prototype")]),e._v(")")]),s("td",[e._v("Se basa en la clonación de objetos copiándolos de un prototipo.")])]),s("tr",[s("td",[s("i",[e._v("Singleton")])]),s("td",[e._v("Restringe una clase a una sola instancia y provee un punto global de acceso a la clase.")])]),s("tr",[s("td",[e._v("Constructor ("),s("i",[e._v("Builder")]),e._v(")")]),s("td",[e._v("Separa la construcción de objetos complejos de su representación.")])]),s("tr",[s("td",[e._v("Adaptador ("),s("i",[e._v("Adapter")]),e._v(")")]),s("td",[e._v("Convierte una interfaz de una clase en otra.")])]),s("tr",[s("td",[e._v("Puente ("),s("i",[e._v("Bridge")]),e._v(")")]),s("td",[e._v("Desacopla una abstracción de su implementación, permitiendo modificarlas independientemente.")])]),s("tr",[s("td",[e._v("Objeto Compuesto ("),s("i",[e._v("Composite")]),e._v(")")]),s("td",[e._v("Construye objetos complejos a partir de otros más simples, utilizando para ello la composición recursiva y una estructura de árbol.")])]),s("tr",[s("td",[e._v("Envoltorio ("),s("i",[e._v("Decorator")]),e._v(")")]),s("td",[e._v("Permite añadir dinámicamente funcionalidad a un objeto existente, evitando heredar sucesivas clases para incorporar la nueva funcionalidad.")])]),s("tr",[s("td",[e._v("Fachada ("),s("i",[e._v("Facade")]),e._v(")")]),s("td",[e._v("Permite una interfaz unificada para un conjunto de interfaces en un subsistema.")])]),s("tr",[s("td",[e._v("Peso Mosca ("),s("i",[e._v("Flyweight")]),e._v(")")]),s("td",[e._v("Emplea un uso compartido para eliminar o reducir la redundancia cuando se tiene gran cantidad de objetos con información idéntica.")])]),s("tr",[s("td",[e._v("Apoderado ("),s("i",[e._v("Proxy")]),e._v(")")]),s("td",[e._v("Proporciona un objeto sustituto para controlar el acceso a otro.")])]),s("tr",[s("td",[e._v("Cadena de responsabilidad ("),s("i",[e._v("Chain of responsibility")]),e._v(")")]),s("td",[e._v("Permite que más de un objeto tenga la posibilidad de atender una petición.")])]),s("tr",[s("td",[e._v("Orden ("),s("i",[e._v("Command")]),e._v(")")]),s("td",[e._v("Encapsula una petición como un objeto y permite “deshacer” la petición.")])]),s("tr",[s("td",[e._v("Intérprete ("),s("i",[e._v("Interpreter")]),e._v(")")]),s("td",[e._v("Permite construir un intérprete de lenguaje para una gramática simple y sencilla.")])]),s("tr",[s("td",[e._v("Iterador ("),s("i",[e._v("Iterator")]),e._v(")")]),s("td",[e._v("Define una interfaz que declara los métodos necesarios para acceder secuencialmente a una colección de objetos sin exponer su estructura interna.")])]),s("tr",[s("td",[e._v("Mediador ("),s("i",[e._v("Mediator")]),e._v(")")]),s("td",[e._v("Coordina las relaciones entre sus asociados. Permite la interacción de varios objetos, sin generar acoples fuertes en esas relaciones.")])]),s("tr",[s("td",[e._v("Recuerdo ("),s("i",[e._v("Memento")]),e._v(")")]),s("td",[e._v("Almacena el estado interno de un objeto y lo restaura posteriormente.")])]),s("tr",[s("td",[e._v("Observador ("),s("i",[e._v("Observer")]),e._v(")")]),s("td",[e._v("Dependencia de uno a muchos para notificar cambios de estado de un objeto.")])]),s("tr",[s("td",[e._v("Estado ("),s("i",[e._v("State")]),e._v(")")]),s("td",[e._v("Permite a un objeto alterar su comportamiento dependiendo del estado interno del mismo.")])]),s("tr",[s("td",[e._v("Estrategia ("),s("i",[e._v("Strategy")]),e._v(")")]),s("td",[e._v("Define familias de algoritmos, los encapsula y maneja su selección.")])]),s("tr",[s("td",[e._v("Método plantilla ("),s("i",[e._v("Template method")]),e._v(")")]),s("td",[e._v("Define el esqueleto de un algoritmo y permite que clases derivadas redefinan ciertos pasos.")])]),s("tr",[s("td",[e._v("Visitante ("),s("i",[e._v("Visitor")]),e._v(")")]),s("td",[e._v("Operaciones aplicadas a elementos de una estructura de objetos.")])])])])])])}],o={name:"Tema1",components:{},data:function(){return{}},mounted:function(){var e=this;this.$nextTick((function(){e.$aosRefresh()}))},updated:function(){this.$aosRefresh()}},n=o,r=t("2877"),c=Object(r["a"])(n,s,i,!1,null,null,null);a["default"]=c.exports},"2b93":function(e,a,t){e.exports=t.p+"img/img3m.0058e550.svg"},"418a":function(e,a,t){e.exports=t.p+"img/img4.d97c10b6.svg"},"553c":function(e,a,t){e.exports=t.p+"img/img1.547f9ac2.svg"},b135:function(e,a,t){e.exports=t.p+"img/img2.eadb38db.svg"},ff66:function(e,a,t){e.exports=t.p+"img/img3.6c9e14c2.svg"}}]);
//# sourceMappingURL=tema1.d9dd5675.js.map