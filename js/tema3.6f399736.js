(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["tema3"],{"24b6":function(e,a,t){e.exports=t.p+"img/img2.01ea2a03.svg"},"25b0":function(e,a,t){e.exports=t.p+"img/img1.afaa5e34.svg"},"530a":function(e,a,t){e.exports=t.p+"img/img2.33403a3b.png"},"65f2":function(e,a,t){e.exports=t.p+"img/img3.28d2af5e.png"},"8ea2":function(e,a,t){e.exports=t.p+"img/img6.704034cc.svg"},"9ace":function(e,a,t){e.exports=t.p+"img/img5.5669c022.svg"},b021:function(e,a,t){e.exports=t.p+"img/img3.e34abc92.svg"},b58d:function(e,a,t){e.exports=t.p+"img/img7.fca8c3a4.svg"},c221:function(e,a,t){e.exports=t.p+"img/img5.128f5609.png"},ca52:function(e,a,t){e.exports=t.p+"img/img4.10774d9a.svg"},d351:function(e,a,t){e.exports=t.p+"img/img4.f0598a40.png"},e183:function(e,a,t){e.exports=t.p+"img/img1.161e0836.png"},eb46:function(e,a,t){"use strict";t.r(a);var s=function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",{staticClass:"curso-main-container pb-3"},[t("BannerInterno"),t("div",{staticClass:"container tarjeta tarjeta--blanca p-4 p-md-5 mb-5"},[e._m(0),t("p",{staticClass:"mb-4",attrs:{"data-aos":"fade-right"}},[e._v("Como se había mencionado en los conceptos GOF, los patrones de diseño comportamentales se centran en definir la forma en cómo los objetos interactúan entre ellos por medio de mensajes.")]),e._m(1),t("Separador"),t("div",{attrs:{id:"t_3_1"}}),e._m(2),t("p",{staticClass:"mb-5",attrs:{"data-aos":"fade-right"}},[e._v("El patrón estrategia permite encapsular un conjunto de algoritmos de forma que puedan ser seleccionados dinámicamente durante el tiempo de ejecución de acuerdo con las acciones del cliente. Este patrón es una de las formas en las que se ven reflejadas fácilmente las características de la programación orientada a objetos, particularmente, lo referente a encapsulamiento y polimorfismo (Landa, 2018c).")]),e._m(3),t("Separador"),t("div",{attrs:{id:"t_3_2"}}),e._m(4),t("p",{attrs:{"data-aos":"fade-right"}},[e._v("El patrón comando permite aislar los objetos que realizan una petición de los objetos concretos encargados de recibir y realizar dicha acción. Esto permite, entre otras cosas, que las peticiones puedan ser enviadas a varios receptores y, si se maneja el estado de las solicitudes, controla acciones de tipo Undo y Redo.")]),t("p",{staticClass:"mb-5",attrs:{"data-aos":"fade-right"}},[e._v("El patrón comando necesita la implementación de varios elementos (Landa, 2018c), así:")]),t("div",{staticClass:"row mb-5"},[t("div",{staticClass:"col-lg-7 order-2 order-lg-1",attrs:{"data-aos":"fade-right"}},[t("AcordionA",{attrs:{tipo:"a","clase-tarjeta":"tarjeta tarjeta--azul"}},[t("div",{staticClass:"row justify-content-center",attrs:{titulo:"Comando"}},[t("div",{staticClass:"col-10"},[t("p",[e._v("Es la clase que sirve de puente entre el cliente y los receptores.")])])]),t("div",{staticClass:"row justify-content-center",attrs:{titulo:"Invoker"}},[t("div",{staticClass:"col-10"},[t("p",[e._v("Elemento usado por los clientes y que le solicita al comando llevar a cabo una acción.")])])]),t("div",{staticClass:"row justify-content-center",attrs:{titulo:"Cliente"}},[t("div",{staticClass:"col-10"},[t("p",[e._v("Invoca la ejecución de las acciones desde el Invoker.")])])]),t("div",{staticClass:"row justify-content-center",attrs:{titulo:"IComando"}},[t("div",{staticClass:"col-10"},[t("p",[e._v("Interfaz donde se especifican las operaciones a ejecutar.")])])]),t("div",{staticClass:"row justify-content-center",attrs:{titulo:"Receptor"}},[t("div",{staticClass:"col-10"},[t("p",[e._v("Clase que realiza la acción.")])])]),t("div",{staticClass:"row justify-content-center",attrs:{titulo:"Ejecutar"}},[t("div",{staticClass:"col-10"},[t("p",[e._v("Operación que necesita ser llevada a cabo.")])])])])],1),e._m(5)]),e._m(6),t("Separador"),t("div",{attrs:{id:"t_3_3"}}),e._m(7),t("p",{attrs:{"data-aos":"fade-right"}},[e._v("Este patrón de diseño está orientado al trabajo con colecciones y facilita el acceso a todos los elementos de la colección sin tener la necesidad de conocer su estructura.")]),t("p",{staticClass:"mb-5",attrs:{"data-aos":"fade-right"}},[e._v("En este patrón, se reconocen dos elementos clave: los enumeradores y los iteradores:")]),e._m(8)],1)],1)},i=[function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",{staticClass:"titulo-principal color-acento-contenido",attrs:{"data-aos":"flip-up"}},[t("div",{staticClass:"titulo-principal__numero"},[t("span",[e._v("3")])]),t("h1",[e._v("Patrones comportamentales")])])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"row align-items-center"},[s("div",{staticClass:"col-lg-8 bg-c8 order-2 order-lg-1",attrs:{"data-aos":"fade-left"}},[s("div",{staticClass:"p-4"},[s("div",{staticClass:"row align-items-center"},[s("div",{staticClass:"col-md-auto mb-4 mb-md-0"},[s("figure",[s("img",{staticClass:"m-auto",staticStyle:{width:"120px"},attrs:{src:t("e183"),alt:""}})])]),s("div",{staticClass:"col bg-c7"},[s("div",{staticClass:"p-4"},[s("p",{staticClass:"mb-0"},[e._v("Los patrones de comportamiento gestionan algoritmos, relaciones y responsabilidades entre objetos.")])])])])])]),s("div",{staticClass:"col-lg-4 mb-4 mb-lg-0 order-1 order-lg-2"},[s("figure",[s("img",{staticClass:"m-auto",staticStyle:{width:"320px"},attrs:{src:t("c221"),alt:""}})])])])},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",{staticClass:"titulo-segundo color-acento-contenido"},[t("h2",[e._v("3.1 Estrategia")])])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"row bg-c3"},[s("div",{staticClass:"col-12"},[s("div",{staticClass:"px-5"},[s("div",{staticClass:"row justify-content-center mb-5"},[s("div",{staticClass:"col-lg-8"},[s("div",{staticClass:"titulo-sexto color-acento-contenido",attrs:{"data-aos":"fade-right"}},[s("p",{staticClass:"mb-0"},[s("b",[e._v("Figura 5")]),e._v(". Ejemplo de Patrón estrategia")])]),s("figure",{attrs:{"data-aos":"fade-left"}},[s("img",{staticClass:"m-auto",attrs:{src:t("25b0"),alt:"La figura ilustra el Patrón de Estrategia, un diseño ampliamente adoptado en programación que facilita la modificación del comportamiento o algoritmo de una clase durante su ejecución. Destaca la interacción del cliente con la interfaz IEStrategia, que sirve de puente para la ejecución de estrategias concretas (Estrategia 1 a Estrategia N), permitiendo su intercambiabilidad."}})])])]),s("div",{staticClass:"row mb-5"},[s("div",{staticClass:"col-lg-7 order-2 order-lg-1",attrs:{"data-aos":"fade-right"}},[s("p",[e._v("Este patrón de diseño es útil cuando una misma funcionalidad puede ser provista usando diferentes mecanismos, algoritmos o estrategias, que serán seleccionadas dependiendo de las acciones realizadas por el cliente en el momento que está ejecutando el programa.")]),s("p",{staticClass:"mb-0"},[e._v("Para un mejor entendimiento del patrón, suponga que quiere implementar una calculadora, la cual provee un conjunto de operaciones (suma, resta, multiplicación y división) que serán usadas por el cliente según su deseo. Cada una de estas operaciones representa una estrategia diferente y será el cliente quien invocará la ejecución de cada una de ellas dependiendo de su deseo, por medio de una interfaz que, usando las propiedades del polimorfismo, se transformará para poder responder a cada solicitud.")])]),s("div",{staticClass:"col-lg-5 mb-4 mb-lg-0 order-1 order-lg-2",attrs:{"data-aos":"fade-left"}},[s("figure",[s("img",{staticClass:"m-auto",staticStyle:{width:"420px"},attrs:{src:t("530a"),alt:""}})])])]),s("div",{staticClass:"row justify-content-center"},[s("div",{staticClass:"col-lg-10 bg-c2",attrs:{"data-aos":"fade-down"}},[s("div",{staticClass:"p-4"},[s("div",{staticClass:"row align-items-center"},[s("div",{staticClass:"col-md-auto"},[s("figure",[s("img",{staticClass:"m-auto",staticStyle:{width:"170px"},attrs:{src:t("24b6"),alt:""}})])]),s("div",{staticClass:"col"},[s("p",{staticClass:"text-white"},[s("b",[e._v("Ejemplo")])]),s("p",{staticClass:"text-white mb-0"},[e._v("Consideremos el ejemplo de implementar una calculadora que ofrece un conjunto de operaciones (suma, resta, multiplicación y división) para que el cliente las utilice según necesite. Cada una de estas operaciones constituye una estrategia distinta. Será el cliente quien decida cuál de ellas ejecutar, basándose en sus requerimientos, a través de una interfaz. Esta interfaz, aprovechando las propiedades del polimorfismo, se adapta para responder adecuadamente a cada tipo de solicitud.")])])])])])])])])])},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",{staticClass:"titulo-segundo color-acento-contenido"},[t("h2",[e._v("3.2 Comando")])])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"col-lg-5 mb-4 mb-lg-0 order-1 order-lg-2",attrs:{"data-aos":"fade-left"}},[s("figure",[s("img",{staticClass:"m-auto",staticStyle:{width:"420px"},attrs:{src:t("65f2"),alt:""}})])])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"row bg-c3"},[s("div",{staticClass:"col-12"},[s("div",{staticClass:"px-5"},[s("p",{staticClass:"mb-5",attrs:{"data-aos":"fade-right"}},[e._v("En la siguiente figura, se puede ver cada uno de los componentes del patrón y cómo interactúan entre ellos.")]),s("div",{staticClass:"row justify-content-center mb-5"},[s("div",{staticClass:"col-lg-8"},[s("div",{staticClass:"titulo-sexto color-acento-contenido",attrs:{"data-aos":"fade-right"}},[s("p",{staticClass:"mb-0"},[s("b",[e._v("Figura 6")]),e._v(". Diagrama patrón comando")])]),s("figure",{attrs:{"data-aos":"fade-left"}},[s("img",{staticClass:"m-auto",attrs:{src:t("b021"),alt:"La figura ilustra el Patrón de Comando en diseño de software, destacando la interacción entre sus componentes: el Cliente, que inicia solicitudes de comandos; el Invoker, que invoca dichos comandos; la interfaz ICommando, por donde los comandos son canalizados; las instancias de Comando, que realizan acciones específicas; y el Receptor, donde se ejecutan los comandos."}})])])]),s("div",{staticClass:"row justify-content-center"},[s("div",{staticClass:"col-lg-10 bg-c2",attrs:{"data-aos":"fade-down"}},[s("div",{staticClass:"p-4"},[s("div",{staticClass:"row align-items-center"},[s("div",{staticClass:"col-md-auto"},[s("figure",[s("img",{staticClass:"m-auto",staticStyle:{width:"170px"},attrs:{src:t("ca52"),alt:""}})])]),s("div",{staticClass:"col"},[s("p",{staticClass:"text-white"},[s("b",[e._v("Ejemplo")])]),s("p",{staticClass:"text-white mb-0"},[e._v("Para entender mejor este patrón, imagine el siguiente contexto: una persona (cliente) quiere hacer uso del televisor y, para poder realizar esto, hace todas las solicitudes de servicios por medio del control remoto (Invoker). El control remoto se comunica con una interfaz que se encarga de responder a las solicitudes de cada uno de los comandos que el usuario puede hacer, como, por ejemplo, prender el televisor, apagar el televisor, subir el volumen, etc. Cada comando realiza una acción particular sobre el televisor (Receptor).")])])])])])])])])])},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",{staticClass:"titulo-segundo color-acento-contenido"},[t("h2",[e._v("3.3 Iterator")])])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"row bg-c3"},[s("div",{staticClass:"col-12"},[s("div",{staticClass:"px-5"},[s("div",{staticClass:"row justify-content-center mb-5"},[s("div",{staticClass:"col-md-8 col-lg-5 bg-c2 m-2",attrs:{"data-aos":"fade-right"}},[s("div",{staticClass:"p-4"},[s("figure",{staticClass:"mb-4"},[s("img",{staticStyle:{width:"100px"},attrs:{src:t("9ace"),alt:""}})]),s("div",{staticClass:"row"},[s("div",{staticClass:"col-auto"},[s("p",{staticClass:"text-white txt-c2"},[s("b",[e._v("Los enumeradores")])])])]),s("p",{staticClass:"text-white mb-0"},[e._v("Como su nombre lo indica, es el encargado de establecer la secuencia con la cual se puede conocer el siguiente elemento de la estructura.")])])]),s("div",{staticClass:"col-md-8 col-lg-5 bg-c2 m-2",attrs:{"data-aos":"fade-left"}},[s("div",{staticClass:"p-4"},[s("figure",{staticClass:"mb-4"},[s("img",{staticStyle:{width:"100px"},attrs:{src:t("8ea2"),alt:""}})]),s("div",{staticClass:"row"},[s("div",{staticClass:"col-auto"},[s("p",{staticClass:"text-white txt-c2"},[s("b",[e._v("Los iteradores")])])])]),s("p",{staticClass:"text-white mb-0"},[e._v("Corresponden a un mecanismo que permite recorrer la estructura de acuerdo con su secuencia de inicio a fin.")])])])]),s("div",{staticClass:"row mb-5"},[s("div",{staticClass:"col-lg-7 order-2 order-lg-1",attrs:{"data-aos":"fade-right"}},[s("p",[e._v("El enumerador, se encarga de implementar un conjunto de métodos estándar para poder establecer la secuencia con la que se debe recorrer la estructura. Entre los métodos más comunes, se encuentra, por ejemplo, el método moveNext(), el cual indica si existe o no un próximo elemento por recorrer; el método Current(), que devuelve el valor actual de la colección según la posición actual en la secuencia; y el método Reset(), que permite iniciar nuevamente la secuencia desde su punto de partida. El iterador necesita del enumerador para poder hacer el proceso de recorrido (Landa, 2018c).")]),s("p",{staticClass:"mb-0"},[e._v("En la siguiente figura, se puede ver cada uno de los componentes del patrón y cómo interactúan entre ellos.")])]),s("div",{staticClass:"col-lg-5 mb-4 mb-lg-0 order-1 order-lg-2",attrs:{"data-aos":"fade-left"}},[s("figure",[s("img",{staticClass:"m-auto",staticStyle:{width:"420px"},attrs:{src:t("d351"),alt:""}})])])]),s("div",{staticClass:"row justify-content-center mb-5"},[s("div",{staticClass:"col-lg-8",attrs:{"data-aos":"fade-right"}},[s("div",{staticClass:"titulo-sexto color-acento-contenido"},[s("p",{staticClass:"mb-0"},[s("b",[e._v("Figura 7")]),e._v(". Diagrama patrón iterador")])]),s("figure",{attrs:{"data-aos":"fade-left"}},[s("img",{staticClass:"m-auto",attrs:{src:t("b58d"),alt:"La imagen muestra el Patrón Iterador, destacando la interacción entre colecciones y enumeradores mediante las interfaces IEnumerable e IEnumerator. Las colecciones utilizan IEnumerable para ofrecer un enumerador, mientras que los enumeradores implementan los métodos de IEnumerator (moveNext(), current(), reset()) para permitir la navegación secuencial por los elementos de la colección."}})])])]),s("p",{staticClass:"mb-0",attrs:{"data-aos":"fade-right"}},[e._v("Este tipo de operaciones son tan comunes en los sistemas actuales que los lenguajes de programación ya poseen una implementación propia del patrón iterador.")])])])])}],o={name:"Tema3",data:function(){return{}},mounted:function(){var e=this;this.$nextTick((function(){e.$aosRefresh()}))},updated:function(){this.$aosRefresh()}},r=o,c=t("2877"),n=Object(c["a"])(r,s,i,!1,null,null,null);a["default"]=n.exports}}]);
//# sourceMappingURL=tema3.6f399736.js.map